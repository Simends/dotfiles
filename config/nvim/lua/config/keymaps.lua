vim.g.mapleader = " "
vim.g.maplocalleader = " "
local function map(mode, lhs, rhs, opts)
	local options = {noremap = true, silent = true}
	if opts then options = vim.tbl_extend("force", options, opts) end
	vim.api.nvim_set_keymap(mode, lhs, rhs, options)
end

map('n', 'Y', 'y$')
map('n', [[\]], ':')
map('n', 'n', 'nzzzv')
map('n', 'N', 'Nzzzv')
map('n', '{', '{zz')
map('n', '}', '}zz')
map('i', ',', ',<c-g>u')
map('i', '.', '.<c-g>u')
map('i', '!', '!<c-g>u')
map('i', '?', '?<c-g>u')
map('v', 'J', [[:m '>+1<cr>gv=gv]])
map('v', 'K', [[:m '<-2<cr>gv=gv]])
map('n', 'Q', '!!sh<cr>')
map('n', 'ZA', ':wqa<cr>')
map('n', 'ZW', ':w<cr>')
map('n', 'J', 'mzJ`z:delmarks z<cr>')
map('n', 'gb', ':e #<cr>')
map('n', '<leader>jj', 'mz$F cl<cr><esc>`z:delmarks z<cr>')
map('n', '<leader>j,', 'mz$F,lcl<cr><esc>`z:delmarks z<cr>')
map('n', '<leader>j.', 'mz$F.lcl<cr><esc>`z:delmarks z<cr>')
map('n', '<leader>j_', 'mz$F_lcl<cr><esc>`z:delmarks z<cr>')
map('n', '<leader>j-', 'mz$F-lcl<cr><esc>`z:delmarks z<cr>')
map('n', '<leader>yc', 'v6l"cy:sp | term zsh<cr>"cp')
map('v', '<leader>fg', 'y:vimgrep <C-r>" **/*<cr>')
map('n', '<C-m>', '<cmd>mode<cr>')
map('n', '<C-l>', ':nohl<cr><C-l>')
map('i', '<C-k>', '<C-]>')
map('n', '<C-b>', '<cmd>NvimTreeToggle<cr>')
map('n', '<C-u>', '<cmd>UndotreeToggle<cr>')

-- Better windowing
-- map('n', '<tab><tab>', '<cmd>tabnew<cr>')
-- map('n', '<tab>1', '<cmd>1tabnext<cr>')
-- map('n', '<tab>2', '<cmd>2tabnext<cr>')
-- map('n', '<tab>3', '<cmd>3tabnext<cr>')
-- map('n', '<tab>4', '<cmd>4tabnext<cr>')
-- map('n', '<tab>5', '<cmd>5tabnext<cr>')
-- map('n', '<tab>6', '<cmd>6tabnext<cr>')
-- map('n', '<tab>7', '<cmd>7tabnext<cr>')
-- map('n', '<tab>8', '<cmd>8tabnext<cr>')
-- map('n', '<tab>9', '<cmd>9tabnext<cr>')
-- map('n', '<tab>0', '<cmd>$tabnext<cr>')
-- map('n', '<tab>a', ':tabnew | term zsh<cr>i')
-- map('n', '<tab>m', ':tabnew | term ncmpcpp<cr>i')
-- map('n', '<tab>s', ':tabnew | term spt<cr>i')
-- map('n', '<tab>w', ':tabnew | term lynx wikipedia.org<cr>i')
-- map('n', '<tab>h', ':tabnew | term htop<cr>i')
-- map('n', '<C-w>a', ':vsp | term zsh<cr>i')
-- map('n', '<C-w>m', ':vsp | term ncmpcpp<cr>i')
-- map('n', '<C-w>p', ':vsp | term python<cr>i')
-- map('n', '<C-w>A', ':sp | term zsh<cr>i')
-- map('n', '<C-w>e', ':60vsp | term nnn -H<cr>i')
map('', '<C-h>', '<C-w>h', {noremap = false, silent = true})
map('', '<C-j>', '<C-w>j', {noremap = false, silent = true})
map('', '<C-k>', '<C-w>k', {noremap = false, silent = true})
map('', '<C-l>', '<C-w>l', {noremap = false, silent = true})
map('t', '<C-h>', [[<C-\><C-N><C-w>h]], {noremap = false, silent = true})
map('t', '<C-j>', [[<C-\><C-N><C-w>j]], {noremap = false, silent = true})
map('t', '<C-k>', [[<C-\><C-N><C-w>k]], {noremap = false, silent = true})
map('t', '<C-l>', [[<C-\><C-N><C-w>l]], {noremap = false, silent = true})
map('n', '+v', '<cmd>vertical resize +10<cr>')
map('n', '-v', '<cmd>vertical resize -10<cr>')
map('n', '+h', '<cmd>resize +10<cr>')
map('n', '-h', '<cmd>resize -10<cr>')

-- qf-/loc-list mappings
map('n', '<F1>', '<cmd>cp<cr>')
map('n', '<F2>', '<cmd>copen<cr>')
map('n', '<F3>', '<cmd>cn<cr>')
map('n', '<F4>', '<cmd>lp<cr>')
map('n', '<F5>', '<cmd>lopen<cr>')
map('n', '<F6>', '<cmd>lnext<cr>')
map('n', '<F7>', '<cmd>bn<cr>')
map('n', '<F8>', '<cmd>bp<cr>')

-- Find
map('n', 'ø', '<cmd>Telescope find_files<cr>')
map('n', 'æ', '<cmd>Telescope live_grep<cr>')
map('n', '<leader>nf', '<cmd>lua require("config.Telescope").subDirFind(nil, "Notater")<cr>')
map('n', '<leader>ng', '<cmd>lua require("config.Telescope").notesGrep()<cr>')
map('n', '<leader>ndf', '<cmd>lua require("config.Telescope").subDirFind("Journal", "Journal")<cr>')
map('n', '<leader>nwf', '<cmd>lua require("config.Telescope").subDirFind("Watchlist", "Leseliste")<cr>')

map('n', '<leader>ndd', '<cmd>lua require("scripts.mdtools").dailyToday()<cr>')

-- Toggle
map('n', '<leader>tl', ':set colorcolumn=80<cr>')
map('n', '<leader>tL', ':set colorcolumn=0<cr>')
map('n', '<leader>tt', [[<cmd>vimgrep /\C[TODO|NOTE|HACK|FIXME|BUG|FIX|ISSUE|WARN|PERF]: /jg **/*<cr>]])
